一.前言
	1.重点是工厂，不是产品，工厂的接口只会返回一种类型的实例，最好是有共同的父类或者共同实现的接口
	2.工厂模式返回的实例一定是工厂创建
	目的：工厂模式主要是为创建对象提供接口
二.	简单工厂
	简单工厂优点：客户端可以免除直接创建产品对象的责任，而仅仅是“消费”产品。简单工
	厂模式通过这种做法实现了对责任的分割
	Android中简单工厂--BitmapFactory,XmlPullParserFactory,CertificateFactory
	
	A    	B
	|		|		
		C接口		--->    C  d()	 通过d返回c接口
		
三.	工厂方法
	工厂方法模式：把对象的实现延迟到子类完成
	工厂方法优点：允许系统在不修改具体工厂角色的情况下引进新产品
	分析List集合、Set集合、Map集合 源码
	lterator：遍历集合工厂方法抽象
	Itr：具体的工厂实现类

四.	抽象工厂（ 产品里面还有产品的分类，再分离）
	Activity、Service --- 类似于产品
	ActivityManager、ServiceManager --- 类似于我们通常所说的AbsMapFactory
	
五.	总结
	简单工厂 ： 用来生产同一等级结构中的任意产品。（对于增加新的产品，无能为力）
	工厂方法 ：用来生产同一等级结构中的固定产品。（支持增加任意产品）
	抽象工厂 ：用来生产不同产品族的全部产品。（对于增加新的产品，无能为力；支持增加产品族）

	以上三种工厂 方法在等级结构和产品族这两个方向上的支持程度不同。所以要根据情况考
	虑应该使用哪种方法。


