一.	前言
	命令模式（Command Pattern）是一种数据驱动的设计模式，它属于行为型模式。请求以命令的形式包裹在对象中，并传给调用对象。
	调用对象寻找可以处理该命令的合适的对象，并把该命令传给相应的对象，该对象执行命令
二.	定义
	将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化，对请求排队或记录请求日志。以及支持可撤销的操作
三.	使用场景
	系统需要将请求调用者和请求接收者解耦，使得调用者和接收者不直接交互。
	系统需要在不同的时间指定请求、将请求排队（如：线程池+工作队列）和执行请求。
	系统需要支持命令的撤销(Undo)操作和恢复(Redo)操作。
	系统需要将一组操作组合在一起，即支持宏命令
四.	在Android中的使用
	网络请求框架的封装（OKHttp,URL）
	
五.	总结
	1 优点

	解除了请求者与实现者之间的耦合，降低了系统的耦合度。
	对请求排队或记录请求日志，支持撤销操作。
	可以容易地设计一个组合命令。
	新命令可以容易地加入到系统中。

	2 缺点

	因为针对每一个命令都需要设计一个具体命令类，使用命令模式可能会导致系统有过多的具体命令类。
	