一.	前言
	迭代器模式（Iterator Pattern）又称为游标（Cursor）模式，是行为型设计模式之一。
	源于对容器的访问，比如java中的list，Map，数组等，我们知道对容器对象的访问必然
	是多种多样的，所以我们把遍历的方法封装在容器中，或者不提供遍历方法
	
二.	Android中使用
	List,Map等包含的迭代器外
	数据库查询使用Cursor(当我们使用SQLiteDatabase的query方法查询数据库时返回的)，该游标对象实质就是一个具体的迭代器，我们可以使用它来遍历数据库查询所得的结果集

三.	总结

	1 优点

	它支持以不同的方式遍历一个聚合对象。
	迭代器简化了聚合类。
	在同一个聚合上可以有多个遍历。
	在迭代器模式中，增加新的聚合类和迭代器类都很方便，无须修改原有代码。

	2 缺点

	由于迭代器模式将存储数据和遍历数据的职责分离，增加新的聚合类需要对应增加新的迭代器类，类的个数成对增加，这在一定程度上增加了系统的复杂性。